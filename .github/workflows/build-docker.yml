on:
    workflow_call:
        inputs:
            force_build:
                type: boolean
                description: 'Force image build even if it already exists'
                required: false
                default: false
            docker_registry:
                type: string
                description: 'Docker registry URL'
                required: true
            docker_username:
                type: string
                description: 'Docker registry username'
                required: true
            docker_image:
                type: string
                description: 'Docker image name'
                required: true

        secrets:
            docker_password:
                description: 'Docker registry password'
                required: true

jobs:
    build-docker:
        name: Build - Docker
        runs-on: ubuntu-latest
        steps:
            - name: Checkout repository
              uses: actions/checkout@v4

            - name: Login to Docker registry
              uses: docker/login-action@v3
              with:
                  registry: ${{ inputs.docker_registry }}
                  username: ${{ inputs.docker_username }}
                  password: ${{ secrets.docker_password }}

            - name: Check if Docker image exists
              id: check_image
              run: |
                  echo "Checking if image exists in Docker registry..."
                  if [ "${{ inputs.force_build }}" = "true" ]; then
                    echo "Forcing build due to force_build input."
                    echo "skip_build=false" >> $GITHUB_ENV
                  else
                    if docker manifest inspect ${{ inputs.docker_registry }}/${{ inputs.docker_image }}:CI-${{ github.sha }} > /dev/null 2>&1; then
                      echo "Image already exists. Skipping build."
                      echo "skip_build=true" >> $GITHUB_ENV
                    else
                      echo "Image does not exist. Proceeding with build."
                      echo "skip_build=false" >> $GITHUB_ENV
                    fi
                  fi

            - name: Set up QEMU
              uses: docker/setup-qemu-action@v3
              if: env.skip_build == 'false'

            - name: Set up Docker Buildx
              uses: docker/setup-buildx-action@v3
              if: env.skip_build == 'false'

            - name: Build and Push Docker Image
              if: env.skip_build == 'false'
              uses: docker/build-push-action@v6
              with:
                  context: .
                  push: true
                  tags: ${{ inputs.docker_registry }}/${{ inputs.docker_image }}:CI-${{ github.sha }}
                  cache-from: |
                      type=registry,ref=${{ inputs.docker_registry }}/${{ inputs.docker_image }}:buildcache
                  cache-to: |
                      type=registry,ref=${{ inputs.docker_registry }}/${{ inputs.docker_image }}:buildcache,mode=max
